/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./js/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./js/main.js":
/*!********************!*\
  !*** ./js/main.js ***!
  \********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _utils_ios_vh_fix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/ios-vh-fix */ "./js/utils/ios-vh-fix.js");
/* harmony import */ var _modules_modals_init_modals__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/modals/init-modals */ "./js/modules/modals/init-modals.js");
/* harmony import */ var _modules_accordion_init_accordions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/accordion/init-accordions */ "./js/modules/accordion/init-accordions.js");
/* harmony import */ var _modules_expander_init_expanders__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modules/expander/init-expanders */ "./js/modules/expander/init-expanders.js");
/* harmony import */ var _modules_phone_mask_init_phone_mask__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modules/phone-mask/init-phone-mask */ "./js/modules/phone-mask/init-phone-mask.js");




 // ---------------------------------

window.addEventListener('DOMContentLoaded', function () {
  // Utils
  // ---------------------------------
  Object(_utils_ios_vh_fix__WEBPACK_IMPORTED_MODULE_0__["iosVhFix"])(); // Modules
  // ---------------------------------
  // все скрипты должны быть в обработчике 'DOMContentLoaded', но не все в 'load'
  // в load следует добавить скрипты, не участвующие в работе первого экрана

  window.addEventListener('load', function () {
    Object(_modules_modals_init_modals__WEBPACK_IMPORTED_MODULE_1__["initModals"])();
    Object(_modules_accordion_init_accordions__WEBPACK_IMPORTED_MODULE_2__["initAccordions"])();
    Object(_modules_expander_init_expanders__WEBPACK_IMPORTED_MODULE_3__["initExpanders"])();
    Object(_modules_phone_mask_init_phone_mask__WEBPACK_IMPORTED_MODULE_4__["initPhoneMask"])();
  });
}); // ---------------------------------
// ❗❗❗ обязательно установите плагины eslint, stylelint, editorconfig в редактор кода.
// привязывайте js не на классы, а на дата атрибуты (data-validate)
// вместо модификаторов .block--active используем утилитарные классы
// .is-active || .is-open || .is-invalid и прочие (обязателен нейминг в два слова)
// .select.select--opened ❌ ---> [data-select].is-open ✅
// выносим все в дата атрибуты
// url до иконок пинов карты, настройки автопрокрутки слайдера, url к json и т.д.
// для адаптивного JS используейтся matchMedia и addListener
// const breakpoint = window.matchMedia('(min-width:1024px)');
// const breakpointChecker = () => {
//   if (breakpoint.matches) {
//   } else {
//   }
// };
// breakpoint.addListener(breakpointChecker);
// breakpointChecker();
// используйте .closest(el)

/***/ }),

/***/ "./js/modules/accordion/accordion.js":
/*!*******************************************!*\
  !*** ./js/modules/accordion/accordion.js ***!
  \*******************************************/
/*! exports provided: Accordion */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Accordion", function() { return Accordion; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var Accordion = /*#__PURE__*/function () {
  function Accordion(elAccordion, maxViewportSize) {
    _classCallCheck(this, Accordion);

    this.elContents = elAccordion.querySelectorAll('[data-accordion-content]');
    this.elButtons = elAccordion.querySelectorAll('[data-accordion-button]');
    this.maxViewportSize = maxViewportSize;
    this.tabClickHandler = this.tabClickHandler.bind(this);
    this.init = this.init;
  }

  _createClass(Accordion, [{
    key: "closeTab",
    value: function closeTab(tab) {
      this.elContents[tab].classList.add('is-closed');
      this.elButtons[tab].classList.add('is-content-closed');
    }
  }, {
    key: "toggleTab",
    value: function toggleTab(tab) {
      this.elContents[tab].classList.toggle('is-closed');
      this.elButtons[tab].classList.toggle('is-content-closed');
    }
  }, {
    key: "tabClickHandler",
    value: function tabClickHandler(evt) {
      for (var tab = 0; tab < this.elButtons.length; tab++) {
        if (evt.target === this.elButtons[tab]) {
          this.toggleTab(tab);
        } else {
          this.closeTab(tab);
        }
      }
    }
  }, {
    key: "windowResizeHandler",
    value: function windowResizeHandler() {
      if (window.innerWidth > this.maxViewportSize) {
        for (var tab = 0; tab < this.elButtons.length; tab++) {
          this.elButtons[tab].setAttribute('disabled', '');
          this.elButtons[tab].removeEventListener('click', this.tabClickHandler);
        }

        return;
      }

      for (var _tab = 0; _tab < this.elButtons.length; _tab++) {
        this.closeTab(_tab);

        this.elButtons[_tab].removeAttribute('disabled', '');

        this.elButtons[_tab].addEventListener('click', this.tabClickHandler);
      }
    }
  }, {
    key: "init",
    value: function init() {
      var _this = this;

      this.windowResizeHandler();
      window.addEventListener('resize', function () {
        _this.windowResizeHandler();
      });
    }
  }]);

  return Accordion;
}();

/***/ }),

/***/ "./js/modules/accordion/init-accordions.js":
/*!*************************************************!*\
  !*** ./js/modules/accordion/init-accordions.js ***!
  \*************************************************/
/*! exports provided: initAccordions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initAccordions", function() { return initAccordions; });
/* harmony import */ var _accordion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./accordion */ "./js/modules/accordion/accordion.js");


var initAccordions = function initAccordions() {
  var elAccordions = document.querySelectorAll('[data-accordion]');
  var MAX_VIEWPORT_SIZE = 768;

  for (var i = 0; i < elAccordions.length; i++) {
    var accordion = new _accordion__WEBPACK_IMPORTED_MODULE_0__["Accordion"](elAccordions[i], MAX_VIEWPORT_SIZE);
    accordion.init();
  }
};



/***/ }),

/***/ "./js/modules/expander/expander.js":
/*!*****************************************!*\
  !*** ./js/modules/expander/expander.js ***!
  \*****************************************/
/*! exports provided: Expander */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Expander", function() { return Expander; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var Expander = /*#__PURE__*/function () {
  function Expander(elExpander) {
    _classCallCheck(this, Expander);

    this.elContent = elExpander.querySelector('[data-expander-content]');
    this.elButton = elExpander.querySelector('[data-expander-button]');
    this.init = this.init;
  }

  _createClass(Expander, [{
    key: "toggleContent",
    value: function toggleContent() {
      if (!this.elContent.classList.contains('is-opened')) {
        this.elButton.textContent = 'Свернуть';
      } else {
        this.elButton.textContent = 'Подробнее';
      }

      this.elContent.classList.toggle('is-opened');
    }
  }, {
    key: "buttonClickHandler",
    value: function buttonClickHandler() {
      var _this = this;

      this.elButton.addEventListener('click', function () {
        _this.toggleContent();
      });
    }
  }, {
    key: "init",
    value: function init() {
      this.buttonClickHandler();
    }
  }]);

  return Expander;
}();

/***/ }),

/***/ "./js/modules/expander/init-expanders.js":
/*!***********************************************!*\
  !*** ./js/modules/expander/init-expanders.js ***!
  \***********************************************/
/*! exports provided: initExpanders */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initExpanders", function() { return initExpanders; });
/* harmony import */ var _expander__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./expander */ "./js/modules/expander/expander.js");


var initExpanders = function initExpanders() {
  var elExpanders = document.querySelectorAll('[data-expander]');

  for (var i = 0; i < elExpanders.length; i++) {
    var expander = new _expander__WEBPACK_IMPORTED_MODULE_0__["Expander"](elExpanders[i]);
    expander.init();
  }
};



/***/ }),

/***/ "./js/modules/modals/init-modals.js":
/*!******************************************!*\
  !*** ./js/modules/modals/init-modals.js ***!
  \******************************************/
/*! exports provided: modals, initModals */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modals", function() { return modals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initModals", function() { return initModals; });
/* harmony import */ var _modals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modals */ "./js/modules/modals/modals.js");

var modals; // Здесь реализован пример открытия модалки через колбэк закрытия
// const openModalInCloseCallback = (name, context = this) => {
//   context._enableScrolling = false;
//   context._setSettings('default');
//   modals.open(name);
// };
// closeCallback() {
//   openModalInCloseCallback('modal-5');
// },

var settings = {
  'default': {
    preventDefault: true,
    stopPlay: true,
    lockFocus: true,
    startFocus: true,
    focusBack: true,
    eventTimeout: 400,
    openCallback: false,
    closeCallback: false
  }
};

var initModals = function initModals() {
  var modalElements = document.querySelectorAll('.modal');
  modalElements.forEach(function (el) {
    setTimeout(function () {
      el.classList.remove('modal--preload');
    }, 100);
  });
  modals = new _modals__WEBPACK_IMPORTED_MODULE_0__["Modals"](settings); // Используйте в разработке экспортируемую переменную modals, window сделан для бэкэнда

  window.modals = modals;
};



/***/ }),

/***/ "./js/modules/modals/modals.js":
/*!*************************************!*\
  !*** ./js/modules/modals/modals.js ***!
  \*************************************/
/*! exports provided: Modals */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Modals", function() { return Modals; });
/* harmony import */ var _utils_scroll_lock__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/scroll-lock */ "./js/utils/scroll-lock.js");
/* harmony import */ var _utils_focus_lock__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/focus-lock */ "./js/utils/focus-lock.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }



var Modals = /*#__PURE__*/function () {
  function Modals() {
    var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    _classCallCheck(this, Modals);

    this.scrollLock = new _utils_scroll_lock__WEBPACK_IMPORTED_MODULE_0__["ScrollLock"]();
    this.focusLock = new _utils_focus_lock__WEBPACK_IMPORTED_MODULE_1__["FocusLock"]();
    this.modalOpenElements = document.querySelectorAll('[data-open-modal]');
    this.openedModalElement = null;
    this.modalName = null;
    this.enableScrolling = true;
    this.settingKey = 'default';
    this.settings = settings;
    this.preventDefault = this.settings[this.settingKey].preventDefault;
    this.stopPlay = this.settings[this.settingKey].stopPlay;
    this.lockFocus = this.settings[this.settingKey].lockFocus;
    this.startFocus = this.settings[this.settingKey].startFocus;
    this.focusBack = this.settings[this.settingKey].focusBack;
    this.eventTimeout = this.settings[this.settingKey].eventTimeout;
    this.openCallback = this.settings[this.settingKey].openCallback;
    this.closeCallback = this.settings[this.settingKey].closeCallback;
    this.documentKeydownHandler = this.documentKeydownHandler.bind(this);
    this.documentClickHandler = this.documentClickHandler.bind(this);
    this.modalClickHandler = this.modalClickHandler.bind(this);
    this.init();
  }

  _createClass(Modals, [{
    key: "init",
    value: function init() {
      if (this.modalOpenElements.length) {
        document.addEventListener('click', this.documentClickHandler);
      }
    }
  }, {
    key: "setSettings",
    value: function setSettings() {
      var settingKey = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.settingKey;

      if (!this.settings[settingKey]) {
        return;
      }

      this.preventDefault = typeof this.settings[settingKey].preventDefault === 'boolean' ? this.settings[settingKey].preventDefault : this.settings[this.settingKey].preventDefault;
      this.stopPlay = typeof this.settings[settingKey].stopPlay === 'boolean' ? this.settings[settingKey].stopPlay : this.settings[this.settingKey].stopPlay;
      this.lockFocus = typeof this.settings[settingKey].lockFocus === 'boolean' ? this.settings[settingKey].lockFocus : this.settings[this.settingKey].lockFocus;
      this.startFocus = typeof this.settings[settingKey].startFocus === 'boolean' ? this.settings[settingKey].startFocus : this.settings[this.settingKey].startFocus;
      this.focusBack = typeof this.settings[settingKey].lockFocus === 'boolean' ? this.settings[settingKey].focusBack : this.settings[this.settingKey].focusBack;
      this.eventTimeout = typeof this.settings[settingKey].eventTimeout === 'number' ? this.settings[settingKey].eventTimeout : this.settings[this.settingKey].eventTimeout;
      this.openCallback = this.settings[settingKey].openCallback || this.settings[this.settingKey].openCallback;
      this.closeCallback = this.settings[settingKey].closeCallback || this.settings[this.settingKey].closeCallback;
    }
  }, {
    key: "documentClickHandler",
    value: function documentClickHandler(evt) {
      var target = evt.target;

      if (!target.closest('[data-open-modal]')) {
        return;
      }

      evt.preventDefault();
      this.modalName = target.closest('[data-open-modal]').dataset.openModal;

      if (!this.modalName) {
        return;
      }

      this.open();
    }
  }, {
    key: "documentKeydownHandler",
    value: function documentKeydownHandler(evt) {
      var isEscKey = evt.key === 'Escape' || evt.key === 'Esc';

      if (isEscKey) {
        evt.preventDefault();
        this.close(document.querySelector('.modal.is-active').dataset.modal);
      }
    }
  }, {
    key: "modalClickHandler",
    value: function modalClickHandler(evt) {
      var target = evt.target;

      if (!target.closest('[data-close-modal]') && target.closest('[data-modal-content]')) {
        return;
      }

      this.close(target.closest('[data-modal]').dataset.modal);
    }
  }, {
    key: "addListeners",
    value: function addListeners(modal) {
      modal.addEventListener('click', this.modalClickHandler);
      document.addEventListener('keydown', this.documentKeydownHandler);
    }
  }, {
    key: "removeListeners",
    value: function removeListeners(modal) {
      modal.removeEventListener('click', this.modalClickHandler);
      document.removeEventListener('keydown', this.documentKeydownHandler);
    }
  }, {
    key: "stopInteractive",
    value: function stopInteractive(modal) {
      if (this.stopPlay) {
        modal.querySelectorAll('video, audio').forEach(function (el) {
          return el.pause();
        });
        modal.querySelectorAll('[data-iframe]').forEach(function (el) {
          el.querySelector('iframe').contentWindow.postMessage('{"event": "command", "func": "pauseVideo", "args": ""}', '*');
        });
      }
    }
  }, {
    key: "autoPlay",
    value: function autoPlay(modal) {
      modal.querySelectorAll('[data-iframe]').forEach(function (el) {
        var autoPlay = el.closest('[data-auto-play]');

        if (autoPlay) {
          el.querySelector('iframe').contentWindow.postMessage('{"event":"command","func":"playVideo","args":""}', '*');
        }
      });
    }
  }, {
    key: "open",
    value: function open() {
      var _this = this;

      var modalName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.modalName;
      var modal = document.querySelector("[data-modal='".concat(modalName, "']"));

      if (!modal || modal.classList.contains('is-active')) {
        return;
      }

      if (modal.querySelector('input')) {
        setTimeout(function () {
          modal.querySelector('input').focus();
        }, 400);
      }

      document.removeEventListener('click', this.documentClickHandler);
      this.openedModalElement = document.querySelector('.modal.is-active');

      if (this.openedModalElement) {
        this.enableScrolling = false;
        this.close(this.openedModalElement.dataset.modal);
      }

      this.setSettings(modalName);
      modal.classList.add('is-active');

      if (!this.openedModalElement) {
        this.scrollLock.disableScrolling();
      }

      if (this.openCallback) {
        this.openCallback();
      }

      if (this.lockFocus) {
        this.focusLock.lock('.modal.is-active', this.startFocus);
      }

      setTimeout(function () {
        _this.addListeners(modal);

        _this.autoPlay(modal);

        document.addEventListener('click', _this.documentClickHandler);
      }, this.eventTimeout);
    }
  }, {
    key: "close",
    value: function close() {
      var _this2 = this;

      var modalName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.modalName;
      var modal = document.querySelector("[data-modal='".concat(modalName, "']"));
      document.removeEventListener('click', this.documentClickHandler);

      if (!modal || !modal.classList.contains('is-active')) {
        return;
      }

      if (this.lockFocus) {
        this.focusLock.unlock(this.focusBack);
      }

      modal.classList.remove('is-active');
      this.removeListeners(modal);
      this.stopInteractive(modal);

      if (this.closeCallback) {
        this.closeCallback();
      }

      if (this.enableScrolling) {
        setTimeout(function () {
          _this2.scrollLock.enableScrolling();
        }, this.eventTimeout);
      }

      setTimeout(function () {
        document.addEventListener('click', _this2.documentClickHandler);
      }, this.eventTimeout);
      this.setSettings('default');
      this.enableScrolling = true;
    }
  }]);

  return Modals;
}();

/***/ }),

/***/ "./js/modules/phone-mask/init-phone-mask.js":
/*!**************************************************!*\
  !*** ./js/modules/phone-mask/init-phone-mask.js ***!
  \**************************************************/
/*! exports provided: initPhoneMask */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initPhoneMask", function() { return initPhoneMask; });
/* harmony import */ var _phone_mask__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./phone-mask */ "./js/modules/phone-mask/phone-mask.js");


var initPhoneMask = function initPhoneMask() {
  var elPhoneMasks = document.querySelectorAll('[data-phone-mask]');
  var matrix = '+7 (___) ___-__-__';

  var _loop = function _loop(i) {
    var phoneMask = new _phone_mask__WEBPACK_IMPORTED_MODULE_0__["PhoneMask"](elPhoneMasks[i], matrix);

    var inputFocusHandler = function inputFocusHandler() {
      phoneMask.init();
      elPhoneMasks[i].removeEventListener('focus', inputFocusHandler);
    };

    elPhoneMasks[i].addEventListener('focus', inputFocusHandler);
  };

  for (var i = 0; i < elPhoneMasks.length; i++) {
    _loop(i);
  }
};



/***/ }),

/***/ "./js/modules/phone-mask/phone-mask.js":
/*!*********************************************!*\
  !*** ./js/modules/phone-mask/phone-mask.js ***!
  \*********************************************/
/*! exports provided: PhoneMask */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PhoneMask", function() { return PhoneMask; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var PhoneMask = /*#__PURE__*/function () {
  function PhoneMask(elInput, matrix) {
    _classCallCheck(this, PhoneMask);

    this.elInput = elInput;
    this.matrix = matrix;
    this.startPosition = null;
    this.position = null;
    this.start = null;
    this.init = this.init;
  }

  _createClass(PhoneMask, [{
    key: "preventDelStart",
    value: function preventDelStart() {
      if (this.position <= this.startPosition || this.elInput.value.substring(0, this.startPosition) !== this.start) {
        this.elInput.value = this.start;
      }
    }
  }, {
    key: "preventSymbolAxceptNumber",
    value: function preventSymbolAxceptNumber(evt) {
      if (isNaN(-evt.data) || evt.data === '_') {
        this.elInput.value = this.elInput.value.slice(0, -1);
      }
    }
  }, {
    key: "limitByMask",
    value: function limitByMask(evt) {
      while (this.matrix[this.position] !== '_' && this.matrix[this.position]) {
        if (this.position <= this.startPosition || this.elInput.value.substring(0, this.startPosition) !== this.start) {
          this.elInput.value = this.start;
        } else if (evt.inputType === 'deleteContentBackward') {
          this.elInput.value = this.elInput.value.slice(0, -1);
        } else {
          this.elInput.value += this.matrix[this.position];
        }

        this.position = this.elInput.value.length;
      }
    }
  }, {
    key: "inputChangeHandler",
    value: function inputChangeHandler() {
      this.preventDelStart();
      this.elInput.addEventListener('input', this.addListeners.bind(this));
    }
  }, {
    key: "addListeners",
    value: function addListeners(evt) {
      evt.preventDefault();
      this.preventSymbolAxceptNumber(evt);
      this.position = this.elInput.value.length;
      this.limitByMask(evt);
    }
  }, {
    key: "init",
    value: function init() {
      this.startPosition = this.matrix.indexOf('_');
      this.position = this.startPosition;
      this.start = this.matrix.substring(0, this.position);
      this.elInput.value = this.start;
      this.inputChangeHandler();
    }
  }]);

  return PhoneMask;
}();

/***/ }),

/***/ "./js/utils/focus-lock.js":
/*!********************************!*\
  !*** ./js/utils/focus-lock.js ***!
  \********************************/
/*! exports provided: FocusLock */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FocusLock", function() { return FocusLock; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var SELECTORS = ['a[href]', 'area[href]', 'input:not([disabled]):not([type="hidden"]):not([aria-hidden])', 'select:not([disabled]):not([aria-hidden])', 'textarea:not([disabled]):not([aria-hidden])', 'button:not([disabled]):not([aria-hidden])', 'iframe', 'object', 'embed', '[contenteditable]', '[tabindex]:not([tabindex^="-"])'];
var FocusLock = /*#__PURE__*/function () {
  function FocusLock() {
    _classCallCheck(this, FocusLock);

    this._lockedSelector = null;
    this._focusableElements = null;
    this._endElement = null;
    this._selectors = SELECTORS;
    this._documentKeydownHandler = this._documentKeydownHandler.bind(this);
  }

  _createClass(FocusLock, [{
    key: "_documentKeydownHandler",
    value: function _documentKeydownHandler(evt) {
      var activeElement = document.activeElement;

      if (evt.key === 'Tab') {
        if (!this._focusableElements.length) {
          evt.preventDefault();
          activeElement.blur();
          return;
        }

        if (this._focusableElements.length === 1) {
          evt.preventDefault();

          this._focusableElements[0].focus();

          return;
        }

        if (this._focusableElements.length > 1 && !activeElement.closest(this._lockedSelector)) {
          evt.preventDefault();

          this._focusableElements[0].focus();

          return;
        }
      }

      if (evt.key === 'Tab' && !evt.shiftKey && activeElement === this._focusableElements[this._focusableElements.length - 1]) {
        evt.preventDefault();

        this._focusableElements[0].focus();
      }

      if (evt.key === 'Tab' && evt.shiftKey && activeElement === this._focusableElements[0]) {
        evt.preventDefault();

        this._focusableElements[this._focusableElements.length - 1].focus();
      }
    }
  }, {
    key: "lock",
    value: function lock(lockedSelector) {
      var startFocus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      this.unlock();
      this._lockedSelector = lockedSelector;
      var lockedElement = document.querySelector(this._lockedSelector);

      if (!lockedElement) {
        return;
      }

      this._focusableElements = lockedElement.querySelectorAll(this._selectors);
      this._endElement = document.activeElement;

      var startElement = lockedElement.querySelector('[data-focus]') || this._focusableElements[0];

      if (this._endElement) {
        this._endElement.blur();
      }

      if (startElement && startFocus) {
        startElement.focus();
      }

      document.addEventListener('keydown', this._documentKeydownHandler);
    }
  }, {
    key: "unlock",
    value: function unlock() {
      var returnFocus = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;

      if (this._endElement && returnFocus) {
        this._endElement.focus();
      }

      this._lockedSelector = null;
      this._focusableElements = null;
      this._endElement = null;
      document.removeEventListener('keydown', this._documentKeydownHandler);
    }
  }]);

  return FocusLock;
}();
window.focusLock = new FocusLock();

/***/ }),

/***/ "./js/utils/ios-checker.js":
/*!*********************************!*\
  !*** ./js/utils/ios-checker.js ***!
  \*********************************/
/*! exports provided: iosChecker */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "iosChecker", function() { return iosChecker; });
var iosChecker = function iosChecker() {
  return ['iPad Simulator', 'iPhone Simulator', 'iPod Simulator', 'iPad', 'iPhone', 'iPod'].includes(navigator.platform) // iPad on iOS 13 detection
  || navigator.userAgent.includes('Mac') && 'ontouchend' in document;
};

/***/ }),

/***/ "./js/utils/ios-vh-fix.js":
/*!********************************!*\
  !*** ./js/utils/ios-vh-fix.js ***!
  \********************************/
/*! exports provided: iosVhFix */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "iosVhFix", function() { return iosVhFix; });
/* harmony import */ var _ios_checker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ios-checker */ "./js/utils/ios-checker.js");


var iosVhFix = function iosVhFix() {
  if (!(!!window.MSInputMethodContext && !!document.documentMode)) {
    if (Object(_ios_checker__WEBPACK_IMPORTED_MODULE_0__["iosChecker"])()) {
      var vh = window.innerHeight * 0.01;
      document.documentElement.style.setProperty('--vh', "".concat(vh, "px"));
      window.addEventListener('resize', function () {
        vh = window.innerHeight * 0.01;
        document.documentElement.style.setProperty('--vh', '${vh}px');
      });
    }
  }
};



/***/ }),

/***/ "./js/utils/scroll-lock.js":
/*!*********************************!*\
  !*** ./js/utils/scroll-lock.js ***!
  \*********************************/
/*! exports provided: ScrollLock */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ScrollLock", function() { return ScrollLock; });
/* harmony import */ var _ios_checker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ios-checker */ "./js/utils/ios-checker.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }


var ScrollLock = /*#__PURE__*/function () {
  function ScrollLock() {
    _classCallCheck(this, ScrollLock);

    this._iosChecker = _ios_checker__WEBPACK_IMPORTED_MODULE_0__["iosChecker"];
    this._lockClass = this._iosChecker() ? 'scroll-lock-ios' : 'scroll-lock';
    this._scrollTop = null;
    this._fixedBlockElements = document.querySelectorAll('[data-fix-block]');
  }

  _createClass(ScrollLock, [{
    key: "_getScrollbarWidth",
    value: function _getScrollbarWidth() {
      return window.innerWidth - document.documentElement.clientWidth;
    }
  }, {
    key: "_getBodyScrollTop",
    value: function _getBodyScrollTop() {
      return self.pageYOffset || document.documentElement && document.documentElement.ScrollTop || document.body && document.body.scrollTop;
    }
  }, {
    key: "disableScrolling",
    value: function disableScrolling() {
      var _this = this;

      this._scrollTop = document.body.dataset.scroll = document.body.dataset.scroll ? document.body.dataset.scroll : this._getBodyScrollTop();

      if (this._getScrollbarWidth()) {
        document.body.style.paddingRight = "".concat(this._getScrollbarWidth(), "px");

        this._fixedBlockElements.forEach(function (block) {
          block.style.paddingRight = "".concat(_this._getScrollbarWidth(), "px");
        });
      }

      document.body.style.top = "-".concat(this._scrollTop, "px");
      document.body.classList.add(this._lockClass);
    }
  }, {
    key: "enableScrolling",
    value: function enableScrolling() {
      document.body.classList.remove(this._lockClass);
      window.scrollTo(0, +document.body.dataset.scroll);
      document.body.style.paddingRight = null;
      document.body.style.top = null;

      this._fixedBlockElements.forEach(function (block) {
        block.style.paddingRight = null;
      });

      document.body.removeAttribute('data-scroll');
      this._scrollTop = null;
    }
  }]);

  return ScrollLock;
}();
window.scrollLock = new ScrollLock();

/***/ })

/******/ });
//# sourceMappingURL=main.min.js.map